{"version":3,"sources":["Components/PressedKey.tsx","App.tsx","index.tsx"],"names":["PressedKey","state","key","text","keyboardEvent","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,GACLC,KAAM,2BAHV,EAcEC,cAAgB,SAACC,GACf,EAAKC,SACH,CACEJ,IAAKG,EAAMH,IACXC,MAAM,KAlBd,uDAME,WACEI,SAASC,iBAAiB,QAASC,KAAKL,iBAP5C,kCAUE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,iBAX/C,oBAuBE,WACE,MAAsBK,KAAKR,MAAnBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAEb,OACE,mBAAGQ,UAAU,eAAb,SACGR,GAAI,mCAAgCD,EAAhC,WA5Bb,GAAgCU,IAAMC,WCJzBC,EAAgB,kBAC3B,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,O,MCAJI,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.a3d8d4cb.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n  text: boolean | string\n};\n\nexport class PressedKey extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n    text: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.keyboardEvent);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyboardEvent);\n  }\n\n  keyboardEvent = (event: KeyboardEvent) => {\n    this.setState(\n      {\n        key: event.key,\n        text: false,\n      },\n    );\n  };\n\n  render() {\n    const { key, text } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {text || `The last pressed key is [${key}]`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { PressedKey } from './Components/PressedKey';\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <PressedKey />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}