{"version":3,"sources":["Components/PressedKey.tsx","App.tsx","index.tsx"],"names":["PressedKey","state","pressedKey","keyboardEvent","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,cAAgB,SAACC,GACf,EAAKC,SACH,CACEH,WAAYE,EAAME,OAhB1B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAqBE,WACE,IAAoBG,EAAQG,KAAKR,MAAzBC,WAER,OACE,mBAAGS,UAAU,eAAb,SACW,KAARL,EACG,0BADH,mCAE+BA,EAF/B,WA1BT,GAAgCM,IAAMC,WCHzBC,EAAb,4MACEb,MAAQ,GADV,4CAGE,WACE,OACE,qBAAKU,UAAU,MAAf,SACE,cAAC,EAAD,UANR,GAAyBC,IAAMC,W,MCE/BE,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.e92ae0ef.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class PressedKey extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.keyboardEvent);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyboardEvent);\n  }\n\n  keyboardEvent = (event: KeyboardEvent) => {\n    this.setState(\n      {\n        pressedKey: event.key,\n      },\n    );\n  };\n\n  render() {\n    const { pressedKey: key } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {key === ''\n          ? 'Nothing was pressed yet'\n          : `The last pressed key is [${key}]`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { PressedKey } from './Components/PressedKey';\n\nexport class App extends React.Component<{}, {}> {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PressedKey />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}